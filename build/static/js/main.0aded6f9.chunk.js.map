{"version":3,"sources":["firebase.js","Post.js","ImageUpload.js","Photos.js","App.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Post","postid","user","username","caption","image_url","likes","setSelectedPost","selectedPost","useState","comments","setcomments","comment","setcomment","liked","setLiked","useEffect","unsubscribe","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","className","initial","opacity","animate","Avatar","alt","src","Fab","aria-label","type","onClick","e","preventDefault","update","text","placeholder","value","onChange","target","disabled","add","displayName","timestamp","FieldValue","serverTimestamp","delete","ImageUpload","setCaption","image","setImage","progress","setProgress","div","width","style","display","files","name","ref","put","on","Math","round","bytesTransferred","totalBytes","error","console","log","alert","message","child","getDownloadURL","then","url","currentUser","uid","imageUrl","Photos","classList","contains","img","y","getModalStyle","top","left","transform","useStyles","makeStyles","theme","root","flexWrap","justifyContent","overflow","backgroundColor","palette","background","paper","gridList","title","color","primary","light","titleBar","position","border","boxShadow","shadows","padding","spacing","App","classes","modalStyle","open","setOpen","posts","setPosts","myPics","setMyPics","setUsername","password","setPassword","email","setEmail","setUser","openSignin","setOpenSignin","openForgotPassword","setopenForgotPassword","onAuthStateChanged","authuser","id","post","Modal","onClose","Input","Button","sendPasswordResetEmail","catch","event","signInWithEmailAndPassword","createUserWithEmailAndPassword","updateProfile","to","signOut","currentuser","where","path","exact","strict","render","key","layout","whileHover","s","transition","delay","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0aded6f9.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\nconst firebaseApp = firebase.initializeApp({\r\n    apiKey: \"AIzaSyBc5Ma7qqwtTAGjGPCUSW3thjKVYkH2NK4\",\r\n    authDomain: \"instagram-dd93b.firebaseapp.com\",\r\n    databaseURL: \"https://instagram-dd93b.firebaseio.com\",\r\n    projectId: \"instagram-dd93b\",\r\n    storageBucket: \"instagram-dd93b.appspot.com\",\r\n    messagingSenderId: \"578914881154\",\r\n    appId: \"1:578914881154:web:d4cb0301049aaa323fae9b\",\r\n    measurementId: \"G-EK4M9FSKM0\"\r\n  });\r\n\r\n  const db =   firebaseApp.firestore();\r\n  const auth = firebase.auth();\r\n  const storage = firebase.storage();\r\n\r\n  export {db,auth,storage, firebase as default};","import React, { useState, useEffect } from 'react'\r\nimport './Post.css'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport firebase, { db } from './firebase'\r\nimport Fab from '@material-ui/core/Fab';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\n\r\n//import { motion } from 'framer-motion';\r\n\r\n\r\n\r\nexport const Post = ({ postid, user, username, caption, image_url, likes, setSelectedPost, selectedPost }) => {\r\n    const [comments, setcomments] = useState([])\r\n    const [comment, setcomment] = useState(\"\")\r\n    const [liked,setLiked]= useState(false)\r\n    useEffect(() => {\r\n        let unsubscribe;\r\n\r\n        if (postid) {\r\n            unsubscribe = db.collection('post').doc(postid).collection(\"comments\").orderBy(\"timestamp\", \"desc\").onSnapshot((snapshot) => {\r\n                setcomments(snapshot.docs.map((doc) => doc.data()))\r\n            })\r\n        }\r\n        if (postid) {\r\n            return () => {\r\n                unsubscribe();\r\n            }\r\n        }\r\n    }, [postid])\r\n\r\n\r\n\r\n    const postComment = (e) => {\r\n        e.preventDefault();\r\n        db.collection('post').doc(postid).collection('comments').add({\r\n            text: comment,\r\n            username: user.displayName,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n        })\r\n        setcomment('')\r\n\r\n    }\r\n\r\n    const postLike = (e) => {\r\n        e.preventDefault()\r\n        if (postid ) {\r\n            if ( !liked)\r\n            {\r\n            db.collection('post').doc(postid).update({ likes: likes + 1 })\r\n            setLiked(true)\r\n            }\r\n            else{\r\n                db.collection('post').doc(postid).update({ likes: likes -1 })\r\n                setLiked(false)\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    const deletePost = (e) => {\r\n        e.preventDefault();\r\n        if (postid) {\r\n            db.collection('post').doc(postid).delete()\r\n        }\r\n    }\r\n    // const handleClick = (e) => {\r\n\r\n    //     e.preventDefault();\r\n    //     console.log(\"reached here\")\r\n    //     if (e.target.FieldValue == postid)\r\n        \r\n\r\n    //     if (e.target.classList.contains('postImage')) {\r\n    //         console.log(\"reached here\")\r\n\r\n    //         setSelectedPost(null);\r\n    //         postid = null;\r\n\r\n    //     }\r\n    //     else {\r\n\r\n\r\n    //     }\r\n    // }\r\n\r\n    // const classes = useStyles();\r\n\r\n    return (\r\n\r\n\r\n\r\n        <div className='post'             initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}>\r\n            <div className='post__header'>\r\n                <Avatar\r\n                    className=\"post_avatar\"\r\n                    alt={username}\r\n                    src=\"\" />\r\n                <h3>{username}</h3>\r\n            </div>\r\n            <img className='post__image' src={image_url} alt=\"\"\r\n                ></img>\r\n            {/* <motion.div className=\"backdrop\" onClick={handleClick}\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n            >\r\n                <motion.img src={image_url} alt=\"enlarged pic\"\r\n                    initial={{ y: \"-100vh\" }}\r\n                    animate={{ y: 0 }}\r\n                />\r\n          </motion.div> */}\r\n            {caption &&\r\n                <h4 className=\"post__text\" > <strong>{username}</strong> {caption}</h4>\r\n            }\r\n            <div className=\"post__like\">\r\n                <Fab aria-label=\"like\" type=\"submit\" onClick={postLike}>\r\n                    <FavoriteIcon />\r\n                    {likes}\r\n                </Fab>\r\n                {/* { likes?(\r\n                \r\n                user?.displayName ? (<h4 className=\"post__text\">  liked by {user.displayName} and\r\n                    {likes - 1} others</h4>) :\r\n                    <h4>liked by {likes} </h4>\r\n                ):null */}\r\n                \r\n                }\r\n            </div>\r\n            <form>\r\n                {\r\n                    <div className=\"post__comments\">\r\n                        <p>comments ...</p>\r\n                        {\r\n                            comments.map((comment) => (\r\n                                <p>\r\n                                    <strong>{comment.username} </strong> {comment.text}\r\n                                </p>\r\n                            ))\r\n                        }\r\n                    </div>\r\n                }\r\n            </form>\r\n\r\n             <form className='post__commentbox'>\r\n                <input\r\n                    className=\"post__input\"\r\n                    type=\"text\"\r\n                    placeholder=\"add comments\"\r\n                    value={comment}\r\n                    onChange={(e) => setcomment(e.target.value)}\r\n                />\r\n\r\n                <button\r\n                    disabled={!comment}\r\n                    className=\"post__button\"\r\n                    type=\"submit\"\r\n                    onClick={postComment}\r\n                >\r\n                    Post\r\n                 </button>\r\n            </form>\r\n            {(user?.displayName ? (user.displayName === username) : null)\r\n                && <button\r\n                    className=\"post__button\"\r\n                    type=\"submit\"\r\n                    onClick={deletePost}\r\n                >\r\n                    Delete\r\n                 </button>}\r\n\r\n        </div> \r\n\r\n\r\n    )\r\n}\r\n","import React, { useState } from 'react'\r\nimport { Button } from '@material-ui/core';\r\nimport { storage, auth,db } from './firebase'\r\nimport './imageUpload.css'\r\nimport firebase from \"firebase\";\r\nimport { motion } from 'framer-motion';\r\n\r\n\r\n\r\nfunction ImageUpload({ username }) {\r\n    const [caption, setCaption] = useState(\"\")\r\n    const [image, setImage] = useState(null)\r\n    const [progress, setProgress] = useState(0)\r\n\r\n\r\n    const handleChange = (e) => {\r\n        if (e.target.files[0]) {\r\n            setImage(e.target.files[0])\r\n        }\r\n        else {\r\n            setImage(null)\r\n        }\r\n    }\r\n\r\n    const handleUpload = () => {\r\n\r\n        const uploadTask = storage.ref('images/' + image.name).put(image)\r\n        uploadTask.on(\r\n            \"state_changed\",\r\n            (snapshot) => {\r\n                const progress = Math.round(\r\n                    (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n                )\r\n                setProgress(progress)\r\n            },\r\n            (error) => {\r\n                console.log(error)\r\n                alert(error.message)\r\n            },\r\n            () => {\r\n                storage.ref('images').child(image.name).getDownloadURL()\r\n                    .then(\r\n                        url => {\r\n                            let user = auth.currentUser\r\n                            db.collection('post').add({\r\n                                uid:user.uid,\r\n                                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                                caption: caption,\r\n                                imageUrl: url,\r\n                                username: username,\r\n                                likes:0\r\n                            })\r\n                            setProgress(0)\r\n                            setCaption(\"\")\r\n                            setImage(null)\r\n                        })\r\n            }\r\n\r\n        )\r\n\r\n    }\r\n\r\n    return (\r\n        <div>\r\n        <form>\r\n\r\n            <div className=\"imageUpload\">\r\n                {\r\n                    image &&\r\n                    // <progress className=\"imageUpload__progress\" value={progress} max='100' />\r\n                    <motion.div className=\"imageUpload__progress\"\r\n                    initial={{ width: 0 }}\r\n                    animate={{ width: progress + '%' }}\r\n                  ></motion.div>\r\n                }\r\n                {image &&\r\n                 <input type=\"text\" placeholder=\"Enter the caption\" onChange={e => setCaption(e.target.value)} value={caption} />}\r\n                {/* <input type=\"file\" onChange={handleChange} /> */}\r\n                {!image && <label>\r\n                <input type=\"file\" style={{display:'none'}} onChange={handleChange} />\r\n                <span>+</span>\r\n            </label>}\r\n\r\n\r\n            </div>\r\n        </form>\r\n        <center>\r\n        { image && <div>{ image.name }</div> }\r\n                {image && <button onClick={handleUpload}>\r\n                            Upload\r\n                        </button>\r\n                }\r\n                </center>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default ImageUpload\r\n","import React from 'react'\r\nimport './Post.css'\r\nimport { motion } from 'framer-motion';\r\n\r\n\r\nexport const Photos = ({ postid, setSelectedPost, image_url, selectedPost }) => {\r\n\r\n\r\n\r\n    const handleClick = (e) => {\r\n\r\n        e.preventDefault();\r\n        console.log(\"reached here\")\r\n        if (e.target.classList.contains('backdrop')) {\r\n            setSelectedPost(null);\r\n            postid = null;\r\n\r\n        }\r\n    }\r\n    return (\r\n        <div>\r\n            <motion.div className=\"backdrop\" onClick={handleClick}\r\n                initial={{ opacity: 0 }}\r\n                animate={{ opacity: 1 }}\r\n            >\r\n                <motion.img src={image_url} alt=\"enlarged pic\"\r\n                    initial={{ y: \"-100vh\" }}\r\n                    animate={{ y: 0 }}\r\n                />\r\n            </motion.div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { Post } from './Post';\nimport ImageUpload from './ImageUpload'\nimport { db, auth } from './firebase'\n//import { Modal } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport { Button, Input } from '@material-ui/core';\nimport { BrowserRouter as Router, NavLink, Redirect} from 'react-router-dom';\nimport Route from 'react-router-dom/Route';\nimport { Photos } from './Photos';\nimport { motion } from 'framer-motion';\n\n\n\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n    justifyContent: 'space-around',\n    overflow: 'hidden',\n    backgroundColor: theme.palette.background.paper,\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)',\n  },\n  title: {\n    color: theme.palette.primary.light,\n  },\n  titleBar: {\n    background:\n      'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  // getModalStyle is not a pure function, we roll the style only on the first render\n  const [modalStyle] = useState(getModalStyle);\n  const [open, setOpen] = useState(false);\n\n\n  const [posts, setPosts] = useState([])\n  const [myPics, setMyPics] = useState([])\n  const [username, setUsername] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [email, setEmail] = useState(\"\")\n  const [user, setUser] = useState(null)\n  const [openSignin, setOpenSignin] = useState(\"\")\n  const [selectedPost, setSelectedPost] = useState(null);\n  const [openForgotPassword, setopenForgotPassword] = useState(\"\")\n\n\n\n  useEffect(() => {\n    const unsubscribe = auth.onAuthStateChanged((authuser) => {\n      if (authuser) {\n        setUser(authuser)\n      }\n      else {\n        setUser(null)\n      }\n    }\n\n\n    )\n    return () => {\n      //perform cleanup\n      unsubscribe()\n    }\n  },\n    [user, username])\n\n\n  useEffect(() => {\n    console.log(\"USer Uid is \" + auth.currentUser ? auth.currentUser : null)\n    db.collection('post').orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setPosts(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n    }\n    )\n\n  }, [])\n\n  const myPic =() => {\n    let currentuser = auth.currentUser\n    if (currentuser) {\n      console.log(\"current user is \" + currentuser.uid)\n    }\n    //where(currentuser.uid, \"==\", user.uid)\n    db.collection('post').where('uid', '==', currentuser.uid).orderBy('timestamp', 'desc').onSnapshot(snapshot => {\n      setMyPics(snapshot.docs.map(doc => ({\n        id: doc.id,\n        post: doc.data()\n      })));\n    }\n    )\n\n  }\n\n  const signUp = (event) => {\n    event.preventDefault()\n    auth.createUserWithEmailAndPassword(email, password)\n      .then((authuser) => {\n        console.log(username);\n        return authuser.user.updateProfile(\n\n          { displayName: username }\n\n        )\n      }\n\n      )\n      .catch(error => alert(error.message))\n    setOpen(false)\n\n  }\n\n  const signIn = (event) => {\n    event.preventDefault()\n    auth.signInWithEmailAndPassword(email, password)\n      .catch(error => alert(error.message))\n\n    setOpenSignin(false)\n  }\n \n  const forgotPassword = (e) => {\n    e.preventDefault()\n    auth.sendPasswordResetEmail(email)\n    .catch(error => alert(error.message))\n    setopenForgotPassword(false)\n\n  }\n\n  return (\n    <Router>\n      <div className=\"app\">\n      <Modal\n          open={openForgotPassword}\n          onClose={() => setopenForgotPassword(false)} >\n\n          <div style={modalStyle} className={classes.paper}>\n            <form className=\"app__signup\">\n              <Input\n                type=\"text\"\n                placeholder=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              {/* <Input\n                type=\"password\"\n                placeholder=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              /> */}\n              <Button type=\"submit\" onClick={forgotPassword}  >reset</Button>\n            </form>\n\n          </div>\n        </Modal>\n    \n\n        <Modal\n          open={openSignin}\n          onClose={() => setOpenSignin(false)} >\n\n          <div style={modalStyle} className={classes.paper}>\n            <form className=\"app__signup\">\n              <Input\n                type=\"text\"\n                placeholder=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <Input\n                type=\"password\"\n                placeholder=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <Button type=\"submit\" onClick={signIn}  >Sign in </Button>\n              <Button onClick={() => setopenForgotPassword(true)}  >Forgot password</Button>\n            </form>\n\n          </div>\n        </Modal>\n        <Modal\n          open={open}\n          onClose={() => setOpen(false)} >\n\n          <div style={modalStyle} className={classes.paper}>\n            <form className=\"app__signup\">\n              <Input\n                type=\"text\"\n                placeholder=\"username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n\n              <Input\n                type=\"text\"\n                placeholder=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n              />\n              <Input\n                type=\"password\"\n                placeholder=\"password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <Button type=\"submit\" onClick={signUp}  >Sign up </Button>\n            </form>\n\n          </div>\n        </Modal>\n\n        <div className=\"app__testing\" >\n          <NavLink to=\"/\"> Home</NavLink>\n\n          <img\n            className=\"app__headerimage\"\n            src=\"https://static.dribbble.com/users/2246631/screenshots/6586825/photo_2.jpg\"\n            alt=\"\"\n          />\n          {user ? (\n            <div className=\"app__loginContainer\">\n              <Button onClick={() => auth.signOut()}  >Logout</Button>\n              <NavLink to=\"/myPhotos\" onClick={myPic}> MyPhotos</NavLink>\n            </div>\n          )\n            :\n            (\n              <div className=\"app__loginContainer\">\n                <Button onClick={() => setOpenSignin(true)}  >Log in</Button>\n                <Button onClick={() => setOpen(true)}  >Sign up</Button>\n              </div>\n            )\n          }\n        </div>\n        {user?.displayName ? (<ImageUpload username={user.displayName} />) : (\n          <h3>Please login to upload</h3>\n        )}\n        <center>\n          <h1>Welcome to my instagram pics</h1>\n        </center>\n        <Route path=\"/\" exact strict render={\n          () => {\n            return (\n              <div className=\"app__post\">\n                <center>\n                  {\n                    posts.map(({ id, post }) => (\n                      <Post key={id} postid={id} user={user} username={post.username} caption={post.caption} image_url={post.imageUrl} likes={post.likes} />\n                    ))\n                  }\n                </center>\n              </div>\n            );\n          }}\n        />\n\n\n        <Route path=\"/myPhotos\" exact strict render={\n          () => {\n            return (\n              <div>\n              <div className=\"img-grid\">\n                {myPics && myPics.map(({ id, post }) => (\n                  <motion.div className=\"img-wrap\" key={id}\n                    layout\n                    whileHover={{ opacity: 1 }} s\n                  onClick={() => setSelectedPost(post)}\n                                >\n                    <motion.img src={post.imageUrl} alt=\"uploaded pic\"\n                      initial={{ opacity: 0 }}\n                      animate={{ opacity: 1 }}\n                      transition={{ delay: 1 }}\n                    />\n                  </motion.div>\n                ))}\n              </div>\n              {selectedPost &&\n\n                <Photos className='post' key={selectedPost.id} postid={selectedPost.id} image_url={selectedPost.imageUrl} \n                  setSelectedPost={setSelectedPost} selectedPost={selectedPost}\n                />\n              }\n              </div>\n            );\n          }}\n        />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}